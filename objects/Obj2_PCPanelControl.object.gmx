<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Spr_Bar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bx = x;
by = y;

clicked = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room != Rm_PCWin){exit;}
draw_set_alpha(0.8);

draw_rectangle(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,false);

draw_set_alpha(1  );
if(!clicked){
    if(place_meeting(x,y,Obj2_Cursor)){
        if(mouse_check_button(mb_left)){
            clicked = true;
        }
    }
}else{
    if(!mouse_check_button(mb_left)){
        clicked = false;
    }
    bx = mouse_x;
}

if(bx &lt;= x){bx = x;}
if(bx &gt;= x+sprite_width){bx = x+sprite_width;}

bx = round(bx);

draw_self();
col  = c_blue;
col2 = c_red  ;
draw_line_colour(x  ,y-2,bx,y-2,col,col2);
draw_line_colour(x-1,y-1,bx,y-1,col,col2);
draw_line_colour(x-1,y  ,bx,y  ,col,col2);
draw_line_colour(x  ,y+1,bx,y+1,col,col2);

draw_sprite(Spr_BarBut,0,bx,by);

val = round(bx - x)/81;
global.pc_pan = val * global.pc_pan_max;
if(global.pc_pan &gt;= global.pc_pan_max){global.pc_pan = global.pc_pan_max;}
if(global.pc_pan &lt;= 0){global.pc_pan = 0;}

draw_set_halign(fa_left  );
draw_set_valign(fa_center);

draw_text_colour(x+sprite_width+4,y,string(global.pc_pan)+"/"+string(global.pc_pan_max),c_red,c_blue,c_purple,c_purple,1);

draw_set_halign(fa_left);
draw_set_valign(fa_top );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
